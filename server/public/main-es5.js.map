{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/container/container.component.ts","webpack:///src/app/components/container/container.component.html","webpack:///src/app/components/grid-menu/grid-menu.component.ts","webpack:///src/app/components/grid-menu/grid-menu.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/pages/article-delete-item/article-delete-item.component.ts","webpack:///src/app/components/pages/article-delete-item/article-delete-item.component.html","webpack:///src/app/components/pages/article-delete/article-delete.component.ts","webpack:///src/app/components/pages/article-delete/article-delete.component.html","webpack:///src/app/components/pages/article-edit-item/article-edit-item.component.ts","webpack:///src/app/components/pages/article-edit-item/article-edit-item.component.html","webpack:///src/app/components/pages/article-edit/article-edit.component.ts","webpack:///src/app/components/pages/article-edit/article-edit.component.html","webpack:///src/app/components/pages/article-upload/article-upload.component.ts","webpack:///src/app/components/pages/article-upload/article-upload.component.html","webpack:///src/app/components/pages/category-delete-item/category-delete-item.component.ts","webpack:///src/app/components/pages/category-delete-item/category-delete-item.component.html","webpack:///src/app/components/pages/category-delete/category-delete.component.ts","webpack:///src/app/components/pages/category-delete/category-delete.component.html","webpack:///src/app/components/pages/category-edit-item/category-edit-item.component.ts","webpack:///src/app/components/pages/category-edit-item/category-edit-item.component.html","webpack:///src/app/components/pages/category-edit/category-edit.component.ts","webpack:///src/app/components/pages/category-edit/category-edit.component.html","webpack:///src/app/components/pages/category-upload/category-upload.component.ts","webpack:///src/app/components/pages/category-upload/category-upload.component.html","webpack:///src/app/components/pages/image-item/image-item.component.ts","webpack:///src/app/components/pages/image-item/image-item.component.html","webpack:///src/app/components/pages/images-collection/images-collection.component.ts","webpack:///src/app/components/pages/images-collection/images-collection.component.html","webpack:///src/app/components/pages/images-upload/images-upload.component.ts","webpack:///src/app/components/pages/images-upload/images-upload.component.html","webpack:///src/app/components/pages/info-page-delete-item/info-page-delete-item.component.ts","webpack:///src/app/components/pages/info-page-delete-item/info-page-delete-item.component.html","webpack:///src/app/components/pages/info-page-delete/info-page-delete.component.ts","webpack:///src/app/components/pages/info-page-delete/info-page-delete.component.html","webpack:///src/app/components/pages/info-page-edit-item/info-page-edit-item.component.ts","webpack:///src/app/components/pages/info-page-edit-item/info-page-edit-item.component.html","webpack:///src/app/components/pages/info-page-edit/info-page-edit.component.ts","webpack:///src/app/components/pages/info-page-edit/info-page-edit.component.html","webpack:///src/app/components/pages/info-page-upload/info-page-upload.component.ts","webpack:///src/app/components/pages/info-page-upload/info-page-upload.component.html","webpack:///src/app/components/pages/podcast-delete-item/podcast-delete-item.component.ts","webpack:///src/app/components/pages/podcast-delete-item/podcast-delete-item.component.html","webpack:///src/app/components/pages/podcast-delete/podcast-delete.component.ts","webpack:///src/app/components/pages/podcast-delete/podcast-delete.component.html","webpack:///src/app/components/pages/podcast-edit-item/podcast-edit-item.component.ts","webpack:///src/app/components/pages/podcast-edit-item/podcast-edit-item.component.html","webpack:///src/app/components/pages/podcast-edit/podcast-edit.component.ts","webpack:///src/app/components/pages/podcast-edit/podcast-edit.component.html","webpack:///src/app/components/pages/podcast-upload/podcast-upload.component.ts","webpack:///src/app/components/pages/podcast-upload/podcast-upload.component.html","webpack:///src/app/components/pages/trash-item/trash-item.component.ts","webpack:///src/app/components/pages/trash-item/trash-item.component.html","webpack:///src/app/components/pages/trash/trash.component.ts","webpack:///src/app/components/pages/trash/trash.component.html","webpack:///src/app/services/articles.service.ts","webpack:///src/app/services/categories.service.ts","webpack:///src/app/services/images.service.ts","webpack:///src/app/services/trash.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContainerComponent","GridMenuComponent","HeaderComponent","ArticleDeleteItemComponent","deleteArticle","emit","article","onDelete","ArticleDeleteComponent","categoriesService","articleService","trashService","_snackBar","isLoading","articles","Array","getCategoriesByCategoryType","subscribe","categories","filter","c","categoryId","forEach","category","getArticleByCategoriesId","push","error","a","_id","trashArticle","subText","content","previewImage","fullImage","categoriesId","articleType","oldId","addTrash","deleteArticleById","openSnackBar","open","duration","ArticleEditItemComponent","titleControl","required","subTextControl","contentControl","previewImageControl","fullImageControl","categoriesIdControl","setValue","split","reverse","value","console","log","updateArticle","onSubmit","ArticleEditComponent","ArticleUploadComponent","addArticle","CategoryDeleteItemComponent","deleteCategory","CategoryDeleteComponent","CategoryEditItemComponent","categoryTitleControl","editCategoryParameters","CategoryEditComponent","updateCategory","index","findIndex","CategoryUploadComponent","categoryType","addCategory","ImageItemComponent","clipboard","deleteImage","expandImage","imageSource","image","filename","classes","copy","message","action","copyName","changeImageSize","ImagesCollectionComponent","imagesService","getImages","images","formdata","addImage","img","ImagesUploadComponent","accept","addNewImage","files","event","newFile","target","type","file","FormData","append","name","indexOf","splice","onFileSelected","onUpload","InfoPageDeleteItemComponent","InfoPageDeleteComponent","InfoPageEditItemComponent","updateInfoPage","InfoPageEditComponent","InfoPageUploadComponent","addInfoPage","PodcastDeleteItemComponent","PodcastDeleteComponent","PodcastEditItemComponent","updatePodcast","PodcastEditComponent","PodcastUploadComponent","addPodcast","TrashItemComponent","deleteTrash","recoverArticle","trash","onRecover","TrashComponent","articlesService","getTrash","trashArticles","t","recoverPodcast","recoverInfoPage","ation","httpOptions","headers","ArticlesService","http","articlesUrl","get","requestUrl","post","patch","providedIn","CategoriesService","categoriesUrl","ImagesService","imagesUrl","formData","TrashService","trashUrl","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GridMenuComponent } from './components/grid-menu/grid-menu.component';\nimport { ArticleUploadComponent } from './components/pages/article-upload/article-upload.component';\nimport { ArticleEditComponent } from './components/pages/article-edit/article-edit.component';\nimport { ArticleDeleteComponent } from './components/pages/article-delete/article-delete.component';\nimport { InfoPageUploadComponent } from './components/pages/info-page-upload/info-page-upload.component';\nimport { InfoPageEditComponent } from './components/pages/info-page-edit/info-page-edit.component';\nimport { InfoPageDeleteComponent } from './components/pages/info-page-delete/info-page-delete.component';\nimport { PodcastUploadComponent } from './components/pages/podcast-upload/podcast-upload.component';\nimport { PodcastEditComponent } from './components/pages/podcast-edit/podcast-edit.component';\nimport { PodcastDeleteComponent } from './components/pages/podcast-delete/podcast-delete.component';\nimport { CategoryUploadComponent } from './components/pages/category-upload/category-upload.component';\nimport { CategoryDeleteComponent } from './components/pages/category-delete/category-delete.component';\nimport { ImagesCollectionComponent } from './components/pages/images-collection/images-collection.component';\nimport { TrashComponent } from './components/pages/trash/trash.component';\nimport { CategoryEditComponent } from './components/pages/category-edit/category-edit.component';\n\n\nconst routes: Routes = [\n\n  { path: '', component: GridMenuComponent },\n  { path: 'articleUpload', component: ArticleUploadComponent },\n  { path: 'articleEdit', component: ArticleEditComponent },\n  { path: 'articleDelete', component: ArticleDeleteComponent },\n  { path: 'infoPageUpload', component: InfoPageUploadComponent },\n  { path: 'infoPageEdit', component: InfoPageEditComponent },\n  { path: 'infoPageDelete', component: InfoPageDeleteComponent },\n  { path: 'podcastUpload', component: PodcastUploadComponent },\n  { path: 'podcastEdit', component: PodcastEditComponent },\n  { path: 'podcastDelete', component: PodcastDeleteComponent },\n  { path: 'categoryUpload', component: CategoryUploadComponent },\n  { path: 'categoryEdit', component: CategoryEditComponent },\n  { path: 'categoryDelete', component: CategoryDeleteComponent },\n  { path: 'imagesCollection', component: ImagesCollectionComponent },\n  { path: 'trash', component: TrashComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularuploadpanel';\n}\n","<app-header></app-header>\r\n<app-container></app-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ContainerComponent } from './components/container/container.component';\nimport {MatButtonModule} from '@angular/material/button'; \nimport {MatMenuModule} from '@angular/material/menu'; \nimport {MatCardModule} from '@angular/material/card'; \nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select'; \nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \nimport {MatDialogModule} from '@angular/material/dialog'; \nimport {MatSnackBarModule} from '@angular/material/snack-bar'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport { GridMenuComponent } from './components/grid-menu/grid-menu.component';\nimport { ArticleUploadComponent } from './components/pages/article-upload/article-upload.component';\nimport { PodcastUploadComponent } from './components/pages/podcast-upload/podcast-upload.component';\nimport { ArticleEditComponent } from './components/pages/article-edit/article-edit.component';\nimport { ArticleDeleteComponent } from './components/pages/article-delete/article-delete.component';\nimport { InfoPageUploadComponent } from './components/pages/info-page-upload/info-page-upload.component';\nimport { InfoPageEditComponent } from './components/pages/info-page-edit/info-page-edit.component';\nimport { InfoPageDeleteComponent } from './components/pages/info-page-delete/info-page-delete.component';\nimport { PodcastEditComponent } from './components/pages/podcast-edit/podcast-edit.component';\nimport { PodcastDeleteComponent } from './components/pages/podcast-delete/podcast-delete.component';\nimport { CategoryUploadComponent } from './components/pages/category-upload/category-upload.component';\nimport { CategoryDeleteComponent } from './components/pages/category-delete/category-delete.component';\nimport { ImagesCollectionComponent } from './components/pages/images-collection/images-collection.component';\nimport { ImagesUploadComponent } from './components/pages/images-upload/images-upload.component';\nimport { TrashComponent } from './components/pages/trash/trash.component';\nimport { ArticleEditItemComponent } from './components/pages/article-edit-item/article-edit-item.component';\nimport { InfoPageEditItemComponent } from './components/pages/info-page-edit-item/info-page-edit-item.component';\nimport { PodcastEditItemComponent } from './components/pages/podcast-edit-item/podcast-edit-item.component';\nimport { ArticleDeleteItemComponent } from './components/pages/article-delete-item/article-delete-item.component';\nimport { InfoPageDeleteItemComponent } from './components/pages/info-page-delete-item/info-page-delete-item.component';\nimport { PodcastDeleteItemComponent } from './components/pages/podcast-delete-item/podcast-delete-item.component';\nimport { CategoryEditComponent } from './components/pages/category-edit/category-edit.component';\nimport { CategoryEditItemComponent } from './components/pages/category-edit-item/category-edit-item.component';\nimport { CategoryDeleteItemComponent } from './components/pages/category-delete-item/category-delete-item.component';\nimport { ImageItemComponent } from './components/pages/image-item/image-item.component';\nimport { TrashItemComponent } from './components/pages/trash-item/trash-item.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ContainerComponent,\n    GridMenuComponent,\n    ArticleUploadComponent,\n    PodcastUploadComponent,\n    ArticleEditComponent,\n    ArticleDeleteComponent,\n    InfoPageUploadComponent,\n    InfoPageEditComponent,\n    InfoPageDeleteComponent,\n    PodcastEditComponent,\n    PodcastDeleteComponent,\n    CategoryUploadComponent,\n    CategoryDeleteComponent,\n    ImagesCollectionComponent,\n    ImagesUploadComponent,\n    TrashComponent,\n    ArticleEditItemComponent,\n    InfoPageEditItemComponent,\n    PodcastEditItemComponent,\n    ArticleDeleteItemComponent,\n    InfoPageDeleteItemComponent,\n    PodcastDeleteItemComponent,\n    CategoryEditComponent,\n    CategoryEditItemComponent,\n    CategoryDeleteItemComponent,\n    ImageItemComponent,\n    TrashItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    FormsModule, \n    ReactiveFormsModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    ClipboardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grid-menu',\n  templateUrl: './grid-menu.component.html',\n  styleUrls: ['./grid-menu.component.css']\n})\nexport class GridMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\n<div id=\"cardContainer\">\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example article icon\">article</mat-icon>Статьи</mat-card-title>\r\n            <mat-card-subtitle>Добавить статью</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете добавить обычную статью. Следуйте инструкции и проверяйте текст статьи перед постингом. В случае, если в статье были допущены ошибки, отредактируйте статью или свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/articleUpload\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example article icon\">article</mat-icon>Статьи</mat-card-title>\r\n            <mat-card-subtitle>Изменить статью</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете изменить обычную статью. Следуйте инструкции и проверяйте текст статьи перед постингом. В случае, если в статье были допущены ошибки, отредактируйте статью или свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/articleEdit\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example article icon\">article</mat-icon>Статьи</mat-card-title>\r\n            <mat-card-subtitle>Удалить статью</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете удалить обычную статью. Следуйте инструкции и проверяйте название и ID статьи, которую вы хотите удалить. В случае удаления неверной статьи Вы можете восстановить её из корзины. Для полного удаления статьи перейдите в корзину. Изображения использованые в статье должны быть удалены отдельно.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/articleDelete\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example info icon\">info</mat-icon>Информационные страницы</mat-card-title>\r\n            <mat-card-subtitle>Добавить информационную страницу</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете добавить информационную страницу. Следуйте инструкции и проверяйте текст страницы перед постингом. В случае, если были допущены ошибки, отредактируйте страницу или свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/infoPageUpload\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example info icon\">info</mat-icon>Информационные страницы</mat-card-title>\r\n            <mat-card-subtitle>Изменить информационную страницу</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете изменить информационную страницу. Следуйте инструкции и проверяйте текст страницы перед постингом. В случае, если  были допущены ошибки, отредактируйте страницу или свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/infoPageEdit\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example info icon\">info</mat-icon>Информационные страницы</mat-card-title>\r\n            <mat-card-subtitle>Удалить информационную страницу</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете удалить информационную страницу. Следуйте инструкции и проверяйте название раздела страницы перед удалением. В случае удаления неверной страницы Вы можете восстановить её из корзины. Для полного удаления статьи перейдите в корзину. Изображения использованые в статье должны быть удалены отдельно.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/infoPageDelete\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example radio icon\">radio</mat-icon>Подкасты</mat-card-title>\r\n            <mat-card-subtitle>Добавить подкаст</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете добавить новый подкаст. Следуйте инструкции и проверяйте код для встраивания подкаста перед постингом. В случае, если в коде для встраивания были допущены ошибки, отредактируйте подкаст или свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/podcastUpload\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example radio icon\">radio</mat-icon>Подкасты</mat-card-title>\r\n            <mat-card-subtitle>Изменить подкаст</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете изменить подкаст. Следуйте инструкции и проверяйте код для встраивания подкаста перед постингом. В случае, если в коде для встраивания были допущены ошибки, отредактируйте подкаст или свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/podcastEdit\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example radio icon\">radio</mat-icon>Подкасты</mat-card-title>\r\n            <mat-card-subtitle>Удалить подкаст</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете удалить подкаст. Следуйте инструкции и проверяйте ID подкаста, который Вы хотите удалить. В случае удаления неверного подкаста Вы можете восстановить его из корзины. Для полного удаления статьи перейдите в корзину.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/podcastDelete\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example category icon\">category</mat-icon>Обычные разделы</mat-card-title>\r\n            <mat-card-subtitle>Добавить новый раздел</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете добавить новый раздел. Следуйте инструкции и проверяйте название и английский эквивалент перед постингом. В случае, если в названии или эквиваленте были допущены ошибки, удалите раздел и создайте его снова или свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/categoryUpload\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example category icon\">category</mat-icon>Обычные разделы</mat-card-title>\r\n            <mat-card-subtitle>Изменение параметров обычных разделов</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете можете изменить название и английский эквивалент обычных разделов и всех относящихся к ним статей.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/categoryEdit\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example category icon\">category</mat-icon>Обычные разделы</mat-card-title>\r\n            <mat-card-subtitle>Удалить обычный раздел и все статьи в нём</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете удалить обычный раздел и все статьи которые к нему относятся. Следуйте инструкции и проверяйте название раздела перед его удалением. Все удалённые статьи будут помещены в корзину и определены в раздел статьи. Разделы ГЛАВНАЯ и СТАТЬИ удалить невозможно. В случае возникновения трудностей свяжитесь с разработчиком.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/categoryDelete\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example collections icon\">collections</mat-icon>Изображения</mat-card-title>\r\n            <mat-card-subtitle>Коллекция изображений</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              В данном разделе находятся все загруженые изображения. Их загрузка может занять некоторое время. Удаление и добавление изображений происходит здесь.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/imagesCollection\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"cardItem\">\r\n        <mat-card-header>\r\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example delete icon\">delete_outline</mat-icon>Корзина</mat-card-title>\r\n            <mat-card-subtitle>Окончательное удаление или восстаноление статей, информационных страниц и подкастов</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <p>\r\n              Здесь Вы можете восстановить раннее удалённые файлы или окончательно удалить их навсегда.\r\n            </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button routerLink=\"/trash\">ПЕРЕЙТИ</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n  <mat-toolbar-row>\n    <span id=\"topHeader\">КЛУБ КАЧЕЛИ</span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n    <span id=\"secondLine\">Панель Редактирования Контента</span>\n  </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Article } from 'src/app/models/article';\n\n@Component({\n  selector: 'app-article-delete-item',\n  templateUrl: './article-delete-item.component.html',\n  styleUrls: ['./article-delete-item.component.css']\n})\nexport class ArticleDeleteItemComponent implements OnInit {\n\n  @Input() article: Article;\n  @Output() deleteArticle: EventEmitter<Article> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDelete(){\n    this.deleteArticle.emit(this.article);\n  }\n\n}\n","<mat-card class=\"cardItem\">\n    <mat-card-header>\n        <mat-card-title>{{article.title}}</mat-card-title>\n        <mat-card-subtitle>{{article._id}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n          {{article.subText}}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"warn\" (click)=\"onDelete()\">УДАЛИТЬ</button>\n    </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Article } from 'src/app/models/article';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport { TrashService } from 'src/app/services/trash.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-article-delete',\n  templateUrl: './article-delete.component.html',\n  styleUrls: ['./article-delete.component.css']\n})\nexport class ArticleDeleteComponent implements OnInit {\n\n  articles: Article[];\n  isLoading: boolean = true;\n\n  constructor(private categoriesService: CategoriesService, private articleService: ArticlesService, private trashService: TrashService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.articles = new Array();\n    this.categoriesService.getCategoriesByCategoryType('category').subscribe(categories => {\n      categories = categories.filter(c => c.categoryId !== 'home' && c.categoryId !== 'podcasts');\n      categories.forEach(category => {\n        this.articleService.getArticleByCategoriesId(category.categoryId).subscribe(articles => {\n          articles.forEach(article => {\n            this.articles.push(article);\n          });\n        });\n      });\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n  deleteArticle(article: Article){\n    this.articles = this.articles.filter(a => a._id != article._id);\n\n    \n    const trashArticle = {\n      title: article.title,\n      subText: article.subText,\n      content: article.content,\n      previewImage:article.previewImage,\n      fullImage: article.fullImage,\n      categoriesId: article.categoriesId,\n      articleType: 'category',\n      oldId: article._id\n    }\n\n    this.trashService.addTrash(trashArticle).subscribe();\n\n    this.articleService.deleteArticleById(article._id).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Статья успешно удалена', 'СТАТЬИ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"deleteItemsContainer\">\n    <app-article-delete-item\n        *ngFor = \"let article of articles\"\n        [article] = \"article\"\n        (deleteArticle)=\"deleteArticle($event)\"\n    >\n    </app-article-delete-item>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Category } from 'src/app/models/category';\nimport { Article } from 'src/app/models/article';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-article-edit-item',\n  templateUrl: './article-edit-item.component.html',\n  styleUrls: ['./article-edit-item.component.css']\n})\nexport class ArticleEditItemComponent implements OnInit {\n\n  titleControl = new FormControl('', Validators.required);\n  subTextControl = new FormControl('', Validators.required);\n  contentControl = new FormControl('', Validators.required);\n  previewImageControl = new FormControl('', Validators.required);\n  fullImageControl = new FormControl('', Validators.required);\n  categoriesIdControl = new FormControl('', Validators.required);\n  @Input() categories: Category[]; \n  @Input() article: Article;\n\n  constructor(private articleService: ArticlesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.titleControl.setValue(this.article.title);\n    this.subTextControl.setValue(this.article.subText);\n    this.contentControl.setValue(this.article.content);\n    this.previewImageControl.setValue(this.article.previewImage.split(\"/\").reverse()[0]);\n    this.fullImageControl.setValue(this.article.fullImage.split(\"/\").reverse()[0]);\n    this.categoriesIdControl.setValue(this.article.categoriesId);\n  }\n\n  onSubmit(){\n    this.article.title = this.titleControl.value;\n    this.article.subText = this.subTextControl.value;\n    this.article.content = this.contentControl.value;\n    this.article.previewImage = `api/images/image/${this.previewImageControl.value}`;\n    this.article.fullImage = `api/images/image/${this.fullImageControl.value}`;\n    this.article.categoriesId = this.categoriesIdControl.value;\n\n    console.log(\"there\");\n    this.articleService.updateArticle(this.article).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Статья успешно изменена', 'СТАТЬИ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<form class=\"articleForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <mat-form-field class=\"inputField\">\n        <mat-label>Заглавие</mat-label>\n        <input matInput placeholder=\"Введите заглавие...\" [formControl]=\"titleControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Сопровождающий текст</mat-label>\n        <textarea matInput placeholder=\"Текст который отображается под заглавием на превью\" [formControl]=\"subTextControl\" required></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Текст статьи</mat-label>\n        <textarea matInput placeholder=\"Контент...\" [formControl]=\"contentControl\" required></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Имя изображения для превью</mat-label>\n        <input matInput placeholder=\"К примеру 2hr3rh13r3rh1ouhro23.jpeg\" [formControl]=\"previewImageControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Имя заглавного изображения статьи</mat-label>\n        <input matInput placeholder=\"К примеру esgwfuoewugf23i42gui34.jpeg\" [formControl]=\"fullImageControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\" appearance=\"fill\">\n        <mat-label>Категория</mat-label>\n        <mat-select [formControl]=\"categoriesIdControl\" required>\n            <mat-option>--</mat-option>\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category.categoryId\">\n                {{category.title}}\n            </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"categoriesIdControl.hasError('required')\">Пожалуйста, выберите категорию</mat-error>\n    </mat-form-field>\n    \n    <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ArticlesService } from '../../../services/articles.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Category } from 'src/app/models/category';\nimport { Article } from 'src/app/models/article';\n\n@Component({\n  selector: 'app-article-edit',\n  templateUrl: './article-edit.component.html',\n  styleUrls: ['./article-edit.component.css']\n})\nexport class ArticleEditComponent implements OnInit {\n\n  categories: Category[];\n  articles: Article[];\n  isLoading: boolean = true;\n\n  constructor(private articleService:ArticlesService, private categoriesService: CategoriesService) { }\n\n  ngOnInit(): void {\n    this.articles = new Array();\n    this.categoriesService.getCategoriesByCategoryType('category').subscribe(categories => {\n      this.categories = categories;\n      this.categories = this.categories.filter(c => c.categoryId !== 'home' && c.categoryId !== 'podcasts');\n      this.categories.forEach(category => {\n        this.articleService.getArticleByCategoriesId(category.categoryId).subscribe(articles => {\n          articles.forEach(article => {\n            this.articles.push(article);\n          });\n        });\n      });\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n}\n","<div id=\"accordionContainer\">\n    <mat-accordion>\n        <mat-expansion-panel class=\"accordionItem\" *ngFor=\"let article of articles\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{article.title}}\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{article._id}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <ng-template matExpansionPanelContent>\n                <app-article-edit-item \n                    [categories]=\"categories\"\n                    [article]=\"article\"\n                >\n                </app-article-edit-item>\n            </ng-template>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { ArticlesService } from '../../../services/articles.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Category } from 'src/app/models/category';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-article-upload',\n  templateUrl: './article-upload.component.html',\n  styleUrls: ['./article-upload.component.css']\n})\nexport class ArticleUploadComponent implements OnInit {\n\n  titleControl = new FormControl('', Validators.required);\n  subTextControl = new FormControl('', Validators.required);\n  contentControl = new FormControl('', Validators.required);\n  previewImageControl = new FormControl('', Validators.required);\n  fullImageControl = new FormControl('', Validators.required);\n  categoriesIdControl = new FormControl('', Validators.required);\n  categories: Category[];\n\n\n  constructor(private articleService:ArticlesService, private categoriesService: CategoriesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.categoriesService.getCategoriesByCategoryType('category').subscribe(categories => {\n      this.categories = categories;\n      this.categories = this.categories.filter(c => c.categoryId !== 'home' && c.categoryId !== 'podcasts');\n    });\n  }\n\n  onSubmit(){\n    const article = {\n      title: this.titleControl.value,\n      subText: this.subTextControl.value,\n      content: this.contentControl.value,\n      previewImage: `api/images/image/${this.previewImageControl.value}`,\n      fullImage: `api/images/image/${this.fullImageControl.value}`,\n      categoriesId: this.categoriesIdControl.value\n    }\n\n    console.log(\"there\");\n    this.articleService.addArticle(article).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Статья успешно добавлена', 'СТАТЬИ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"cardContainer\">\n    <mat-card class=\"cardItem\">\n        <mat-card-header>\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example article icon\">article</mat-icon>Статьи</mat-card-title>\n            <mat-card-subtitle>Добавить статью</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <p>\n                Текст статьи пишется в HTML. Остальное пишется обычным текстом.\n            </p>\n            <form class=\"articleForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Заглавие</mat-label>\n                    <input matInput placeholder=\"Введите заглавие...\" [formControl]=\"titleControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Сопровождающий текст</mat-label>\n                    <textarea matInput placeholder=\"Текст который отображается под заглавием на превью\" [formControl]=\"subTextControl\" required></textarea>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Текст статьи</mat-label>\n                    <textarea matInput placeholder=\"Контент...\" [formControl]=\"contentControl\" required></textarea>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Имя изображения для превью</mat-label>\n                    <input matInput placeholder=\"К примеру 2hr3rh13r3rh1ouhro23.jpeg\" [formControl]=\"previewImageControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Имя заглавного изображения статьи</mat-label>\n                    <input matInput placeholder=\"К примеру esgwfuoewugf23i42gui34.jpeg\" [formControl]=\"fullImageControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\" appearance=\"fill\">\n                    <mat-label>Категория</mat-label>\n                    <mat-select [formControl]=\"categoriesIdControl\" required>\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let category of categories\" [value]=\"category.categoryId\">\n                            {{category.title}}\n                          </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"categoriesIdControl.hasError('required')\">Пожалуйста, выберите категорию</mat-error>\n                </mat-form-field>\n                \n                <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Category } from 'src/app/models/category';\n\n@Component({\n  selector: 'app-category-delete-item',\n  templateUrl: './category-delete-item.component.html',\n  styleUrls: ['./category-delete-item.component.css']\n})\nexport class CategoryDeleteItemComponent implements OnInit {\n\n  @Input() category: Category;\n  @Output() deleteCategory: EventEmitter<Category> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDelete(){\n    this.deleteCategory.emit(this.category);\n  }\n\n}\n","<mat-card class=\"cardItem\">\n    <mat-card-header>\n        <mat-card-title>{{category.title}}</mat-card-title>\n        <mat-card-subtitle>{{category.categoryId}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n          {{category._id}}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"warn\" (click)=\"onDelete()\">УДАЛИТЬ</button>\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/models/category';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport { TrashService } from 'src/app/services/trash.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-category-delete',\n  templateUrl: './category-delete.component.html',\n  styleUrls: ['./category-delete.component.css']\n})\nexport class CategoryDeleteComponent implements OnInit {\n\n  categories: Category[];\n  isLoading: boolean = true;\n\n  constructor(private categoriesService: CategoriesService, private articleService: ArticlesService, private trashService: TrashService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.categoriesService.getCategoriesByCategoryType('category').subscribe(categories => {\n      this.categories = categories;\n      this.categories = this.categories.filter(c => c.categoryId !== 'home' && c.categoryId !== 'podcasts');\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n  deleteCategory(category: Category){\n    this.categories = this.categories.filter(c => c._id != category._id);\n\n    this.articleService.getArticleByCategoriesId(category.categoryId).subscribe(articles => {\n      articles.forEach(article => {\n        let trashArticle = {\n          title: article.title,\n          subText: article.subText,\n          content: article.content,\n          previewImage: article.previewImage,\n          fullImage: article.fullImage,\n          categoriesId: article.categoriesId,\n          articleType: 'category',\n          oldId: article._id\n        }\n\n        this.trashService.addTrash(trashArticle).subscribe();\n        this.articleService.deleteArticleById(article._id).subscribe();\n      });\n    });\n\n    this.categoriesService.deleteCategory(category._id).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Раздел успешно удалён', 'РАЗДЕЛЫ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"deleteItemsContainer\">\n    <app-category-delete-item\n        *ngFor = \"let category of categories\"\n        [category] = \"category\"\n        (deleteCategory)=\"deleteCategory($event)\"\n    >\n    </app-category-delete-item>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Category } from 'src/app/models/category';\nimport { ArticlesService } from '../../../services/articles.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-category-edit-item',\n  templateUrl: './category-edit-item.component.html',\n  styleUrls: ['./category-edit-item.component.css']\n})\nexport class CategoryEditItemComponent implements OnInit {\n  \n  categoriesIdControl = new FormControl('', Validators.required);\n  categoryTitleControl = new FormControl('', Validators.required);\n  @Input() category: Category; \n  @Output() editCategoryParameters: EventEmitter<Category> = new EventEmitter();\n\n  constructor(private articleService: ArticlesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.categoryTitleControl.setValue(this.category.title);\n    this.categoriesIdControl.setValue(this.category.categoryId);\n  }\n  \n  onSubmit(){\n    this.articleService.getArticleByCategoriesId(this.category.categoryId).subscribe(articles =>{\n      articles.forEach(article => {\n        article.categoriesId = this.categoriesIdControl.value;\n        this.articleService.updateArticle(article).subscribe();\n      });\n      this.category.title = this.categoryTitleControl.value;\n      this.category.categoryId = this.categoriesIdControl.value;\n      this.editCategoryParameters.emit(this.category);\n    });\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Раздел успешно изменён', 'РАЗДЕЛЫ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<form class=\"articleForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Название страницы заглавными буквами</mat-label>\n        <input matInput placeholder=\"К примеру НОВОЕ\" [formControl]=\"categoryTitleControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Английский эквивалент в формате camelCase, который будет отображаться в ссылке.</mat-label>\n        <input matInput placeholder=\"К примеру newInfoPage\" [formControl]=\"categoriesIdControl\" required>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ArticlesService } from '../../../services/articles.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Category } from 'src/app/models/category';\nimport { Article } from 'src/app/models/article';\n\n@Component({\n  selector: 'app-category-edit',\n  templateUrl: './category-edit.component.html',\n  styleUrls: ['./category-edit.component.css']\n})\nexport class CategoryEditComponent implements OnInit {\n\n  categories: Category[];\n  isLoading: boolean = true;\n  articles: Article[];\n\n  constructor(private articleService:ArticlesService, private categoriesService: CategoriesService) { }\n\n  ngOnInit(): void {\n    this.categoriesService.getCategoriesByCategoryType('category').subscribe(categories => {\n      this.categories = categories;\n      this.categories = this.categories.filter(c => c.categoryId !== 'home' && c.categoryId !== 'podcasts');\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n  editCategoryParameters(category: Category){\n    this.categoriesService.updateCategory(category).subscribe();\n    const index = this.categories.findIndex(c => c._id == category._id);\n    this.categories[index] = category;\n  }\n\n}\n","<div id=\"accordionContainer\">\r\n    <mat-accordion>\r\n        <mat-expansion-panel class=\"accordionItem\" *ngFor=\"let category of categories\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    {{category.title}}\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    {{category.categoryId}}\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <ng-template matExpansionPanelContent>\r\n                <app-category-edit-item \r\n                    [category]=\"category\"\r\n                    (editCategoryParameters) = \"editCategoryParameters($event)\"\r\n                >\r\n                </app-category-edit-item>\r\n            </ng-template>\r\n        </mat-expansion-panel>\r\n    </mat-accordion>\r\n</div>\r\n<div id=\"spinnerContainer\">\r\n    <mat-progress-spinner \r\n        *ngIf=\"isLoading\"\r\n        color=\"accent\" \r\n        mode=\"indeterminate\">\r\n    </mat-progress-spinner>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-category-upload',\n  templateUrl: './category-upload.component.html',\n  styleUrls: ['./category-upload.component.css']\n})\nexport class CategoryUploadComponent implements OnInit {\n\n  categoryTitleControl = new FormControl('', Validators.required);\n  categoriesIdControl = new FormControl('', Validators.required);\n\n  constructor(private categoriesService: CategoriesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    const category = {\n      title: this.categoryTitleControl.value,\n      categoryId: this.categoriesIdControl.value,\n      categoryType: 'category'\n    }\n\n    this.categoriesService.addCategory(category).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Раздел успешно добавлен', 'РАЗДЕЛЫ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"cardContainer\">\n    <mat-card class=\"cardItem\">\n        <mat-card-header>\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example article icon\">article</mat-icon>Статьи</mat-card-title>\n            <mat-card-subtitle>Добавить статью</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <p>\n                Текст статьи пишется в HTML. Остальное пишется обычным текстом.\n            </p>\n            <form class=\"articleForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Название страницы заглавными буквами</mat-label>\n                    <input matInput placeholder=\"К примеру НОВОЕ\" [formControl]=\"categoryTitleControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Английский эквивалент в формате camelCase, который будет отображаться в ссылке.</mat-label>\n                    <input matInput placeholder=\"К примеру newInfoPage\" [formControl]=\"categoriesIdControl\" required>\n                </mat-form-field>\n\n                <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Image } from 'src/app/models/image';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-image-item',\n  templateUrl: './image-item.component.html',\n  styleUrls: ['./image-item.component.css']\n})\nexport class ImageItemComponent implements OnInit {\n\n  @Input() image: Image;\n  @Output() deleteImage: EventEmitter<Image> = new EventEmitter();\n  imageSource: string;\n  expandImage: boolean = false;\n\n  constructor(private clipboard: Clipboard, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.imageSource = `api/images/image/${this.image.filename}`;\n  }\n\n  setClasses(){\n    let classes = {\n      'expandImage': this.expandImage,\n      'smallImage': !this.expandImage\n    }\n    return classes;\n  }\n\n  changeImageSize(){\n    this.expandImage = !this.expandImage;\n  }\n\n  onDelete(){\n    this.deleteImage.emit(this.image);\n  }\n\n  copyName(){\n    this.clipboard.copy(this.image.filename);\n    this.openSnackBar(\"Имя скопировано\", \"ИЗОБРАЖЕНИЯ\");\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"imagePanel\">\n    <div id=\"imageContainer\" [ngClass]=\"setClasses()\">\n        <img src=\"{{imageSource}}\" />\n    </div>\n</div>\n<div class=\"imageActions\">\n    <button mat-raised-button color=\"primary\" (click)=\"copyName()\" >СКОПИРОВАТЬ НАЗВАНИЕ</button>\n    <button mat-raised-button color=\"primary\" (click)=\"changeImageSize()\" >УВЕЛИЧИТЬ</button>\n    <button mat-raised-button color=\"warn\" (click)=\"onDelete()\" >УДАЛИТЬ</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Image } from 'src/app/models/image';\nimport { ImagesService } from 'src/app/services/images.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-images-collection',\n  templateUrl: './images-collection.component.html',\n  styleUrls: ['./images-collection.component.css']\n})\nexport class ImagesCollectionComponent implements OnInit {\n\n  images: Image[];\n  isLoading: boolean = true;\n\n  constructor(private imagesService: ImagesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.imagesService.getImages().subscribe(images =>{\n      this.images = images;\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n  addNewImage(formdata: FormData){\n    this.imagesService.addImage(formdata).subscribe();\n    this.openSnackBar(\"Файлы добавлен\", \"ИЗОБРАЖЕНИЕ\");\n  }\n\n  deleteImage(image: Image){\n    this.images = this.images.filter(img => img._id != image._id);\n    this.imagesService.deleteImage(image._id).subscribe();\n    this.openSnackBar(\"Файл удалён\", \"ИЗОБРАЖЕНИЕ\");\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"accordionContainer\">\n    <mat-accordion>\n        <mat-expansion-panel class=\"accordionItem\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Загрузить новое изображение\n                </mat-panel-title>\n                <mat-panel-description>\n                    png/jpeg/jpg/webp\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <ng-template matExpansionPanelContent>\n                <app-images-upload (addNewImage)=\"addNewImage($event)\"></app-images-upload>\n            </ng-template>\n        </mat-expansion-panel>\n        <mat-expansion-panel class=\"accordionItem\" *ngFor=\"let image of images\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{image.filename}}\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{image.uploadDate}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <ng-template matExpansionPanelContent>\n                <app-image-item \n                    [image]=\"image\"\n                    (deleteImage) = \"deleteImage($event)\"\n                >\n                </app-image-item>\n            </ng-template>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: 'app-images-upload',\n  templateUrl: './images-upload.component.html',\n  styleUrls: ['./images-upload.component.css']\n})\nexport class ImagesUploadComponent {\n\n  @Input() accept = 'image/*';\n  @Output() addNewImage: EventEmitter<FormData> = new EventEmitter();\n\n  files: File[] = new Array();\n\n  constructor() {}\n\n  onFileSelected(event) {\n    const newFile: File = <File>event.target.files[0];\n    if(newFile.type === 'image/jpeg' || newFile.type === 'image/png' ||newFile.type === 'image/webp' || newFile.type === 'image/jpg'){\n      this.files.push(newFile);\n    }\n  }\n\n  onUpload() {\n    this.files.forEach(file => {\n      const formdata = new FormData();\n      formdata.append('file', file, file.name);\n      this.addNewImage.emit(formdata);\n    });\n    this.files = new Array()\n  }\n\n  removeFile(file) {\n    let index;\n    if (this.files && -1 !== (index = this.files.indexOf(file))) {\n      this.files.splice(index, 1);\n    }\n  }\n\n}\n","<div id=\"uploadPanel\">\n    <div *ngFor=\"let file of files\">\n        <span>{{file.name}}</span>\n        <button mat-icon-button\n            color=\"primary\"\n            (click)=\"removeFile(file)\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <button mat-raised-button color = \"primary\" (click) = \"fileUpload.click()\"><mat-icon>add</mat-icon>Добавить</button>\n    <input \n        type=\"file\"\n        style=\"display: none\"\n        (change)=\"onFileSelected($event)\"\n        multiple=\"multiple\" \n        accept=\"{{accept}}\"\n        #fileUpload/>\n</div>\n\n<button mat-raised-button color = \"primary\" (click)=\"onUpload()\"><mat-icon>upgrade</mat-icon>ЗАГРУЗИТЬ</button>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Article } from 'src/app/models/article';\n\n@Component({\n  selector: 'app-info-page-delete-item',\n  templateUrl: './info-page-delete-item.component.html',\n  styleUrls: ['./info-page-delete-item.component.css']\n})\nexport class InfoPageDeleteItemComponent implements OnInit {\n\n  @Input() article: Article;\n  @Output() deleteArticle: EventEmitter<Article> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDelete(){\n    this.deleteArticle.emit(this.article);\n  }\n\n}\n","<mat-card class=\"cardItem\">\n    <mat-card-header>\n        <mat-card-title>{{article.title}}</mat-card-title>\n        <mat-card-subtitle>{{article._id}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n          {{article.subText}}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"warn\" (click)=\"onDelete()\">УДАЛИТЬ</button>\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Article } from 'src/app/models/article';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport { TrashService } from 'src/app/services/trash.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-info-page-delete',\n  templateUrl: './info-page-delete.component.html',\n  styleUrls: ['./info-page-delete.component.css']\n})\nexport class InfoPageDeleteComponent implements OnInit {\n\n  articles: Article[];\n  isLoading: boolean = true;\n\n  constructor(private categoriesService: CategoriesService, private articleService: ArticlesService, private trashService: TrashService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.articles = new Array();\n    this.categoriesService.getCategoriesByCategoryType('info').subscribe(categories => {\n      categories.forEach(category => {\n        this.articleService.getArticleByCategoriesId(category.categoryId).subscribe(articles => {\n          articles.forEach(article => {\n            this.articles.push(article);\n          });\n        });\n      });\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n  deleteArticle(article: Article){\n    this.articles = this.articles.filter(a => a._id != article._id);\n\n    \n    const trashArticle = {\n      title: article.title,\n      subText: 'none',\n      content: article.content,\n      previewImage: 'none',\n      fullImage: article.fullImage,\n      categoriesId: article.categoriesId,\n      articleType: 'info',\n      oldId: article._id\n    }\n\n    this.trashService.addTrash(trashArticle).subscribe();\n\n    this.articleService.deleteArticleById(article._id).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Страница успешно удалена', 'ИНФО', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"deleteItemsContainer\">\n    <app-info-page-delete-item\n        *ngFor = \"let article of articles\"\n        [article] = \"article\"\n        (deleteArticle)=\"deleteArticle($event)\"\n    >\n    </app-info-page-delete-item>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Category } from 'src/app/models/category';\nimport { Article } from 'src/app/models/article';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-info-page-edit-item',\n  templateUrl: './info-page-edit-item.component.html',\n  styleUrls: ['./info-page-edit-item.component.css']\n})\nexport class InfoPageEditItemComponent implements OnInit {\n\n  titleControl = new FormControl('', Validators.required);\n  contentControl = new FormControl('', Validators.required);\n  fullImageControl = new FormControl('', Validators.required);\n  categoriesIdControl = new FormControl('', Validators.required);\n  categoryTitleControl = new FormControl('', Validators.required);\n  category: Category;\n  @Input() categories: Category[]; \n  @Input() article: Article;\n\n  constructor(private articleService:ArticlesService, private categoriesService: CategoriesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.categories.forEach(category => {\n      if(category.categoryId === this.article.categoriesId){\n        this.category = category;\n        this.categoryTitleControl.setValue(this.category.title);\n      }\n    });\n    this.titleControl.setValue(this.article.title);\n    this.contentControl.setValue(this.article.content);\n    this.fullImageControl.setValue(this.article.fullImage.split(\"/\").reverse()[0]);\n    this.categoryTitleControl.setValue(this.category.title);\n    this.categoriesIdControl.setValue(this.article.categoriesId);\n  }\n\n  onSubmit(){\n    this.category.title = this.categoryTitleControl.value;\n    this.category.categoryId = this.categoriesIdControl.value;\n\n    this.categoriesService.updateCategory(this.category).subscribe();\n\n    this.article.title = this.titleControl.value;\n    this.article.content = this.contentControl.value;\n    this.article.fullImage = `api/images/image/${this.fullImageControl.value}`;\n    this.article.categoriesId = this.categoriesIdControl.value;\n\n    console.log(\"there\");\n    this.articleService.updateInfoPage(this.article).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Страница успешно изменена', 'ИНФО', {\n      duration: 3000,\n    });\n  }\n\n}\n","<form class=\"articleForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <mat-form-field class=\"inputField\">\n        <mat-label>Заглавие</mat-label>\n        <input matInput placeholder=\"Введите заглавие...\" [formControl]=\"titleControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Текст статьи</mat-label>\n        <textarea matInput placeholder=\"Контент...\" [formControl]=\"contentControl\" required></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Имя заглавного изображения статьи</mat-label>\n        <input matInput placeholder=\"К примеру esgwfuoewugf23i42gui34.jpeg\" [formControl]=\"fullImageControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Название страницы заглавными буквами</mat-label>\n        <input matInput placeholder=\"К примеру НОВОЕ\" [formControl]=\"categoryTitleControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Английский эквивалент в формате camelCase, который будет отображаться в ссылке.</mat-label>\n        <input matInput placeholder=\"К примеру newInfoPage\" [formControl]=\"categoriesIdControl\" required>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ArticlesService } from '../../../services/articles.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Category } from 'src/app/models/category';\nimport { Article } from 'src/app/models/article';\n\n@Component({\n  selector: 'app-info-page-edit',\n  templateUrl: './info-page-edit.component.html',\n  styleUrls: ['./info-page-edit.component.css']\n})\nexport class InfoPageEditComponent implements OnInit {\n\n  categories: Category[];\n  articles: Article[];\n  isLoading: boolean = true;\n\n  constructor(private articleService:ArticlesService, private categoriesService: CategoriesService) { }\n\n  ngOnInit(): void {\n    this.articles = new Array();\n    this.categoriesService.getCategoriesByCategoryType('info').subscribe(categories => {\n      this.categories = categories;\n      this.categories.forEach(category => {\n        this.articleService.getArticleByCategoriesId(category.categoryId).subscribe(articles => {\n          articles.forEach(article => {\n            this.articles.push(article);\n          });\n        });\n      });\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n}\n","<div id=\"accordionContainer\">\n    <mat-accordion>\n        <mat-expansion-panel class=\"accordionItem\" *ngFor=\"let article of articles\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{article.title}}\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{article._id}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <ng-template matExpansionPanelContent>\n                <app-info-page-edit-item \n                    [categories]=\"categories\"\n                    [article]=\"article\"\n                >\n                </app-info-page-edit-item>\n            </ng-template>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { ArticlesService } from '../../../services/articles.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-info-page-upload',\n  templateUrl: './info-page-upload.component.html',\n  styleUrls: ['./info-page-upload.component.css']\n})\nexport class InfoPageUploadComponent implements OnInit {\n\n  titleControl = new FormControl('', Validators.required);\n  contentControl = new FormControl('', Validators.required);\n  fullImageControl = new FormControl('', Validators.required);\n  categoriesIdControl = new FormControl('', Validators.required);\n  categoryTitleControl = new FormControl('', Validators.required);\n\n  constructor(private articleService:ArticlesService, private categoriesService: CategoriesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    const category = {\n      title: this.categoryTitleControl.value,\n      categoryId: this.categoriesIdControl.value,\n      categoryType: 'info'\n    }\n\n    this.categoriesService.addCategory(category).subscribe();\n\n    const article = {\n      title: this.titleControl.value,\n      content: this.contentControl.value,\n      fullImage: `api/images/image/${this.fullImageControl.value}`,\n      categoriesId: this.categoriesIdControl.value\n    }\n\n    this.articleService.addInfoPage(article).subscribe();\n    this.openSnackBar();\n  }\n  \n  openSnackBar() {\n    this._snackBar.open('Страница успешно загружена', 'ИНФО', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"cardContainer\">\n    <mat-card class=\"cardItem\">\n        <mat-card-header>\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example article icon\">article</mat-icon>Статьи</mat-card-title>\n            <mat-card-subtitle>Добавить статью</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <p>\n                Текст статьи пишется в HTML. Остальное пишется обычным текстом.\n            </p>\n            <form class=\"articleForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Заглавие</mat-label>\n                    <input matInput placeholder=\"Введите заглавие...\" [formControl]=\"titleControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Текст статьи</mat-label>\n                    <textarea matInput placeholder=\"Контент...\" [formControl]=\"contentControl\" required></textarea>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Имя заглавного изображения статьи</mat-label>\n                    <input matInput placeholder=\"К примеру esgwfuoewugf23i42gui34.jpeg\" [formControl]=\"fullImageControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Название страницы заглавными буквами</mat-label>\n                    <input matInput placeholder=\"К примеру НОВОЕ\" [formControl]=\"categoryTitleControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Английский эквивалент в формате camelCase, который будет отображаться в ссылке.</mat-label>\n                    <input matInput placeholder=\"К примеру newInfoPage\" [formControl]=\"categoriesIdControl\" required>\n                </mat-form-field>\n\n                <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Article } from 'src/app/models/article';\n\n\n@Component({\n  selector: 'app-podcast-delete-item',\n  templateUrl: './podcast-delete-item.component.html',\n  styleUrls: ['./podcast-delete-item.component.css']\n})\nexport class PodcastDeleteItemComponent implements OnInit {\n\n  @Input() article: Article;\n  @Output() deleteArticle: EventEmitter<Article> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDelete(){\n    this.deleteArticle.emit(this.article);\n  }\n\n}\n","<mat-card class=\"cardItem\">\n    <mat-card-header>\n        <mat-card-title>{{article.title}}</mat-card-title>\n        <mat-card-subtitle>{{article._id}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n          {{article.subText}}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"warn\" (click)=\"onDelete()\">УДАЛИТЬ</button>\n    </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Article } from 'src/app/models/article';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport { TrashService } from 'src/app/services/trash.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-podcast-delete',\n  templateUrl: './podcast-delete.component.html',\n  styleUrls: ['./podcast-delete.component.css']\n})\nexport class PodcastDeleteComponent implements OnInit {\n\n  articles: Article[];\n  isLoading: boolean = true;\n\n  constructor(private articleService: ArticlesService, private trashService: TrashService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.articles = new Array();\n    this.articleService.getArticleByCategoriesId('podcasts').subscribe(articles => {\n      this.articles = articles;\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n  deleteArticle(article: Article){\n    this.articles = this.articles.filter(a => a._id != article._id);\n\n    \n    const trashArticle = {\n      title: article.title,\n      subText: article.subText,\n      content: article.content,\n      oldId: article._id\n    }\n\n    this.trashService.addTrash(trashArticle).subscribe();\n\n    this.articleService.deleteArticleById(article._id).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Подкаст успешно удалён', 'Подкасты', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"deleteItemsContainer\">\n    <app-podcast-delete-item\n        *ngFor = \"let article of articles\"\n        [article] = \"article\"\n        (deleteArticle)=\"deleteArticle($event)\"\n    >\n    </app-podcast-delete-item>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Article } from 'src/app/models/article';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-podcast-edit-item',\n  templateUrl: './podcast-edit-item.component.html',\n  styleUrls: ['./podcast-edit-item.component.css']\n})\nexport class PodcastEditItemComponent implements OnInit {\n\n  titleControl = new FormControl('', Validators.required);\n  subTextControl = new FormControl('', Validators.required);\n  contentControl = new FormControl('', Validators.required);\n  @Input() article: Article;\n\n  constructor(private articleService:ArticlesService, private categoriesService: CategoriesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.titleControl.setValue(this.article.title);\n    this.subTextControl.setValue(this.article.subText);\n    this.contentControl.setValue(this.article.content);\n  }\n\n  onSubmit(){\n\n    this.article.title = this.titleControl.value;\n    this.article.subText = this.subTextControl.value;\n    this.article.content = this.contentControl.value;\n\n    console.log(\"there\");\n    this.articleService.updatePodcast(this.article).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Подкаст успешно изменен', 'ПОДКАСТЫ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<form class=\"articleForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <mat-form-field class=\"inputField\">\n        <mat-label>Заглавие</mat-label>\n        <input matInput placeholder=\"Введите заглавие...\" [formControl]=\"titleControl\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Сопровождающий текст</mat-label>\n        <textarea matInput placeholder=\"Текст который отображается под заглавием на превью\" [formControl]=\"subTextControl\" required></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"inputField\">\n        <mat-label>Ссылка на видео для встраивания</mat-label>\n        <input matInput placeholder=\"К примеру https://www.youtube.com/embed/RzYSUScCdjw\" [formControl]=\"contentControl\" required>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ArticlesService } from '../../../services/articles.service';\nimport { Article } from 'src/app/models/article';\n\n@Component({\n  selector: 'app-podcast-edit',\n  templateUrl: './podcast-edit.component.html',\n  styleUrls: ['./podcast-edit.component.css']\n})\nexport class PodcastEditComponent implements OnInit {\n\n  articles: Article[];\n  isLoading: boolean = true;\n\n  constructor(private articleService:ArticlesService) { }\n\n  ngOnInit(): void {\n    this.articles = new Array();\n    this.articleService.getArticleByCategoriesId('podcasts').subscribe(articles => {\n      this.articles = articles;\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n}\n","<div id=\"accordionContainer\">\n    <mat-accordion>\n        <mat-expansion-panel class=\"accordionItem\" *ngFor=\"let article of articles\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{article.title}}\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{article._id}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <ng-template matExpansionPanelContent>\n                <app-podcast-edit-item \n                    [article]=\"article\"\n                >\n                </app-podcast-edit-item>\n            </ng-template>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { ArticlesService } from '../../../services/articles.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-podcast-upload',\n  templateUrl: './podcast-upload.component.html',\n  styleUrls: ['./podcast-upload.component.css']\n})\nexport class PodcastUploadComponent implements OnInit {\n\n  titleControl = new FormControl('', Validators.required);\n  subTextControl = new FormControl('', Validators.required);\n  contentControl = new FormControl('', Validators.required);\n\n  constructor(private articleService:ArticlesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    const article = {\n      title: this.titleControl.value,\n      subText: this.subTextControl.value,\n      content: this.contentControl.value\n    }\n\n    this.articleService.addPodcast(article).subscribe();\n    this.openSnackBar();\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Подкаст успешно загружен', 'ПОДКАСТЫ', {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"cardContainer\">\n    <mat-card class=\"cardItem\">\n        <mat-card-header>\n            <mat-card-title><mat-icon aria-hidden=\"true\" aria-label=\"Example article icon\">article</mat-icon>Статьи</mat-card-title>\n            <mat-card-subtitle>Добавить статью</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <p>\n                Текст статьи пишется в HTML. Остальное пишется обычным текстом.\n            </p>\n            <form class=\"articleForm\" (ngSubmit)=\"onSubmit()\">\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Заглавие</mat-label>\n                    <input matInput placeholder=\"Введите заглавие...\" [formControl]=\"titleControl\" required>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Сопровождающий текст</mat-label>\n                    <textarea matInput placeholder=\"Текст который отображается под заглавием на превью\" [formControl]=\"subTextControl\" required></textarea>\n                </mat-form-field>\n\n                <mat-form-field class=\"inputField\">\n                    <mat-label>Ссылка на видео для встраивания</mat-label>\n                    <input matInput placeholder=\"К примеру https://www.youtube.com/embed/RzYSUScCdjw\" [formControl]=\"contentControl\" required>\n                </mat-form-field>\n\n                <button mat-raised-button color=\"primary\" type=\"submit\" id=\"submitButton\">ОТПРАВИТЬ</button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Trash } from 'src/app/models/trash';\n\n@Component({\n  selector: 'app-trash-item',\n  templateUrl: './trash-item.component.html',\n  styleUrls: ['./trash-item.component.css']\n})\nexport class TrashItemComponent implements OnInit {\n\n  @Input() trash : Trash;\n  @Output() deleteTrash: EventEmitter<Trash> = new EventEmitter();\n  @Output() recoverArticle: EventEmitter<Trash> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDelete(){\n    this.deleteTrash.emit(this.trash);\n  }\n\n  onRecover(){\n    this.recoverArticle.emit(this.trash);\n  }\n\n}\n","<mat-card class=\"cardItem\">\n    <mat-card-header>\n        <mat-card-title>{{trash.title}}</mat-card-title>\n        <mat-card-subtitle>{{trash.oldId}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n          {{trash.subText}}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" (click)=\"onRecover()\">ВОССТАНОВИТЬ</button>\n        <button mat-raised-button color=\"warn\" (click)=\"onDelete()\">УДАЛИТЬ</button>\n    </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Trash } from 'src/app/models/trash';\nimport { TrashService } from 'src/app/services/trash.service';\nimport { ArticlesService } from 'src/app/services/articles.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-trash',\n  templateUrl: './trash.component.html',\n  styleUrls: ['./trash.component.css']\n})\nexport class TrashComponent implements OnInit {\n\n  trashArticles: Trash[];\n  isLoading: boolean = true;\n\n  constructor(private trashService: TrashService, private articlesService: ArticlesService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.trashService.getTrash().subscribe(trash => {\n      this.trashArticles = trash;\n    }, error => this.isLoading = false, () => this.isLoading = false);\n  }\n\n  deleteTrash(trash: Trash){\n    this.trashArticles = this.trashArticles.filter(t => t._id != trash._id);\n    this.trashService.deleteTrash(trash._id).subscribe();\n    this.openSnackBar( \"Мусор удалён\", \"КОРЗИНА\");\n  }\n\n  recoverArticle(trash: Trash){\n    this.trashArticles = this.trashArticles.filter(t => t._id != trash._id);\n    if(trash.categoriesId == \"podcasts\"){ \n      const article = {\n        title: trash.title,\n        subText: trash.subText,\n        content: trash.content,\n        oldId: trash.oldId\n      }\n      this.articlesService.recoverPodcast(article).subscribe();\n      this.trashService.deleteTrash(trash._id).subscribe();\n      this.openSnackBar( \"Подкаст восстановлен\", \"ПОДКАСТЫ\");\n    }\n    else if(trash.articleType == \"category\"){\n      const article = {\n        title: trash.title,\n        subText: trash.subText,\n        content: trash.content,\n        previewImage: trash.previewImage,\n        fullImage: trash.fullImage,\n        categoriesId: trash.categoriesId,\n        oldId: trash.oldId\n      }\n      this.articlesService.recoverArticle(article).subscribe();\n      this.trashService.deleteTrash(trash._id).subscribe();\n      this.openSnackBar( \"Статья восстановлена\", \"СТАТЬИ\");\n    }\n    else if(trash.articleType == \"info\"){\n      const article = {\n        title: trash.title,\n        subText: trash.subText,\n        content: trash.content,\n        previewImage: trash.previewImage,\n        fullImage: trash.fullImage,\n        categoriesId: trash.categoriesId,\n        oldId: trash.oldId\n      }\n      this.articlesService.recoverInfoPage(article).subscribe();\n      this.trashService.deleteTrash(trash._id).subscribe();\n      this.openSnackBar( \"Страница восстановлена\", \"ИНФО\");\n    }\n  }\n\n  openSnackBar(message:string, ation:string) {\n    this._snackBar.open(message, ation, {\n      duration: 3000,\n    });\n  }\n\n}\n","<div id=\"deleteItemsContainer\">\n    <app-trash-item\n        *ngFor = \"let trash of trashArticles\"\n        [trash] = \"trash\"\n        (deleteTrash)=\"deleteTrash($event)\"\n        (recoverArticle)=\"recoverArticle($event)\"\n    >\n    </app-trash-item>\n</div>\n<div id=\"spinnerContainer\">\n    <mat-progress-spinner \n        *ngIf=\"isLoading\"\n        color=\"accent\" \n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Article } from '../models/article';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticlesService {\n  articlesUrl:string = \"/api/articles\";\n\n  constructor(private http: HttpClient) { }\n\n  getArticles(): Observable<Article[]> {\n    return this.http.get<Article[]>(this.articlesUrl);\n  }\n\n  getArticleById(id: string): Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/article/${id}`;\n    return this.http.get<Article>(requestUrl);\n  }\n\n  getArticleByCategoriesId(categoriesId: string): Observable<Article[]> {\n    const requestUrl = `${this.articlesUrl}/${categoriesId}`;\n    return this.http.get<Article[]>(requestUrl);\n  }\n\n  addArticle(article): Observable<Article> {\n    return this.http.post<Article>(this.articlesUrl, article, httpOptions);\n  }\n\n  addInfoPage(article): Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/infoPage`;\n    return this.http.post<Article>(requestUrl, article, httpOptions);\n  }\n\n  addPodcast(article):Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/podcasts`;\n    return this.http.post<Article>(requestUrl, article, httpOptions);\n  }\n\n  updateArticle(article: Article):Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/${article._id}`;\n    return this.http.patch<Article>(requestUrl, article, httpOptions);\n  }\n\n  updateInfoPage(article: Article): Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/infoPage/${article._id}`;\n    return this.http.patch<Article>(requestUrl, article, httpOptions);\n  }\n\n  updatePodcast(article: Article): Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/podcasts/${article._id}`;\n    return this.http.patch<Article>(requestUrl, article, httpOptions);\n  }\n\n  deleteArticleById(id: string): Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/${id}`;\n    return this.http.delete<Article>(requestUrl, httpOptions);\n  }\n\n  deleteArticlesByCategoriesId(categoriesId: string): Observable<Article[]> {\n    const requestUrl = `${this.articlesUrl}/${categoriesId}`;\n    return this.http.delete<Article[]>(requestUrl, httpOptions);\n  }\n\n  recoverArticle(article): Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/article/recover`;\n    return this.http.post<Article>(requestUrl, article, httpOptions);\n  }\n\n  recoverInfoPage(article): Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/infoPage/recover`;\n    return this.http.post<Article>(requestUrl, article, httpOptions);\n  }\n\n  recoverPodcast(article):Observable<Article> {\n    const requestUrl = `${this.articlesUrl}/podcast/recover`;\n    return this.http.post<Article>(requestUrl, article, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Category } from '../models/category';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  categoriesUrl:string = \"/api/categories\";\n  constructor(private http:HttpClient) { }\n\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.categoriesUrl);\n  }\n\n  getCategoriesByCategoryType(categoryType: string): Observable<Category[]> {\n    const requestUrl = `${this.categoriesUrl}/${categoryType}`;\n    return this.http.get<Category[]>(requestUrl);\n  }\n\n  addCategory(category): Observable<Category> {\n    return this.http.post<Category>(this.categoriesUrl, category, httpOptions);\n  }\n\n  updateCategory(category: Category): Observable<Category> {\n    const requestUrl = `${this.categoriesUrl}/${category._id}`;\n    return this.http.patch<Category>(requestUrl, category, httpOptions);\n  }\n\n  deleteCategory(id: string): Observable<Category> {\n    const requestUrl = `${this.categoriesUrl}/${id}`;\n    return this.http.delete<Category>(requestUrl, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Image } from '../models/image';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  imagesUrl:string = \"/api/images\";\n  constructor(private http:HttpClient) { }\n\n  getImages(): Observable<Image[]> {\n    const requestUrl = `${this.imagesUrl}/files`;\n    return this.http.get<Image[]>(requestUrl);\n  }\n\n  addImage(formData: FormData): Observable<Image> {\n    const requestUrl = `${this.imagesUrl}/upload`;\n    return this.http.post<Image>(requestUrl, formData);\n  }\n\n  deleteImage(id): Observable<Image> {\n    const requestUrl = `${this.imagesUrl}/files/del/${id}`;\n    console.log(id);\n    return this.http.delete<Image>(requestUrl, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Trash } from '../models/trash';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrashService {\n\n  trashUrl:string = \"/api/trash\";\n  constructor(private http:HttpClient) { }\n\n  getTrash(): Observable<Trash[]> {\n    return this.http.get<Trash[]>(this.trashUrl);\n  }\n\n  addTrash(trash): Observable<Trash> {\n    return this.http.post<Trash>(this.trashUrl, trash, httpOptions);\n  }\n\n  addTrashPodcast(trash): Observable<Trash> {\n    const requestUrl = `${this.trashUrl}/podcasts`;\n    return this.http.post<Trash>(requestUrl, trash, httpOptions);\n  }\n\n  deleteTrash(id: string): Observable<Trash> {\n    const requestUrl = `${this.trashUrl}/${id}`;\n    return this.http.delete<Trash>(requestUrl, httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}